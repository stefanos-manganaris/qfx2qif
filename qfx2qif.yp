%{
#
# QFX2QIF - converts qfx files to qif files
#
# Copyright © 2018 Stefanos Manganaris
#
# This software comes with absolutly NO WARRANTY of any kind.
#
# Usage: yapp -v qfx2qif.yp   # to generate the qfx2qif.pm parser module
#
# See also: qfx2qif.pl
#
%}

%{
my %trans;
my $acct;
%}

%%
QFXfile:	OFXsection
	|	Header OFXsection
	;

Header:		KeyValue
	|	Header KeyValue
	;

KeyValue:	Key ':' Value
	;

Key:		identifier
	;

Value:		identifier
	|	integer
	;

OFXsection:	OFXstag
		SIGNONMSGSRSV1
		INVSTMTMSGSRSV1
		SECLISTMSGSRSV1
		OFXetag
		;

INVSTMTMSGSRSV1:	INVSTMTMSGSRSV1stag
			INVSTMTTRNRSlist
			INVSTMTMSGSRSV1etag
			;

INVSTMTTRNRSlist:	INVSTMTTRNRS
		|	INVSTMTTRNRSlist INVSTMTTRNRS
		;

INVSTMTTRNRS:	INVSTMTTRNRSstag
		TRNUIDSTATUS
		INVSTMTRSstag
		DTASOFCURDEF
		INVACCTFROM	{ $acct = $_[5] }
		INVTRANLIST
		INVPOSLIST
		INVBAL
		INVSTMTRSetag
		INVSTMTTRNRSetag
		;

INVTRANLIST:	# empty
	|	INVTRANLISTstag
		DTSTARTEND
		INVTLIST
		INVTRANLISTetag
	;

INVTLIST:	INVTRAN
	|	INVTLIST INVTRAN
	;

INVTRAN:	BUYTRAN
	|	REINVEST
	|       TRANSFER
	|	INCOME
	|	BANKTRAN
	;

BUYTRAN:	BUYOTHERstag	{ %trans = initTrans(); $trans{"type"} = "Buy"  }
		INVTRANstag
		FITID
		DTTRADE		{ $trans{"date"} = formatDate($_[5]) }
		DTSETTLE
		MEMOOPT
		INVTRANetag
		SECID		{ $trans{"security"} = $main::semap{$_[10]} }
		UNITS		{ $trans{"qty"} = $_[12] }
		UNITPRICE	{ $trans{"price"} = $_[14] }
		TOTAL		{ $trans{"totalamt"} = (-1)*$_[16]; $trans{"invstamt"} = (-1)*$_[16] }
		SUBACCTSEC
		BUYOTHERetag	{ printTrans() }
	|	SELLOTHERstag	{ %trans = initTrans(); $trans{"type"} = "ShrsOut"  }
		INVTRANstag
		FITID
		DTTRADE		{ $trans{"date"} = formatDate($_[5]) }
		DTSETTLE
		MEMOOPT
		INVTRANetag
		SECID		{ $trans{"security"} = $main::semap{$_[10]} }
		UNITS		{ $trans{"qty"} = (-1)*$_[12] }
		UNITPRICE	{ $trans{"price"} = $_[14] }
		TOTAL		{ $trans{"totalamt"} = $_[16]; $trans{"invstamt"} = $_[16] }
		SUBACCTSEC
		SELLOTHERetag	{ printTrans() }
	|	SELLSTOCKstag	{ %trans = initTrans(); $trans{"type"} = "Sell"  }
		INVTRANstag
		FITID
		DTTRADE		{ $trans{"date"} = formatDate($_[5]) }
		DTSETTLE
		MEMOOPT
		INVTRANetag
		SECID		{ $trans{"security"} = $main::semap{$_[10]} }
		UNITS		{ $trans{"qty"} = (-1)*$_[12] }
		UNITPRICE	{ $trans{"price"} = $_[14] }
		COMMISSION	{ $trans{"commission"} = $_[16] }
		FEES		{ $trans{"fees"} = $_[18] }
		TOTAL		{ $trans{"totalamt"} = $_[20]; $trans{"invstamt"} = $_[20] }
		SUBACCTSEC
		SELLSTOCKetag	{ printTrans() }
	;

REINVEST:	REINVESTstag	{ %trans = initTrans(); $trans{"type"} = "Reinv"  }
		INVTRANstag
		FITID
		DTTRADE		{ $trans{"date"} = formatDate($_[5]) }
		DTSETTLE
		MEMOOPT
		INVTRANetag
		SECID		{ $trans{"security"} = $main::semap{$_[10]} }
		INCOMETYPE	{ $trans{"type"} .= mapIType($_[12]) }
		TOTAL		{ $trans{"totalamt"} = (-1)*$_[14]; $trans{"invstamt"} = (-1)*$_[14] }
		SUBACCTSEC
		UNITS		{ $trans{"qty"} = $_[17] }
		UNITPRICE	{ $trans{"price"} = $_[19] }
		REINVESTetag	{ printTrans() }
	;

TRANSFER:	TRANSFERstag	{ %trans = initTrans(); $trans{"type"} = "Shrs"  }
		INVTRANstag
		FITID
		DTTRADE		{ $trans{"date"} = formatDate($_[5]) }
		DTSETTLE
		MEMOOPT
		INVTRANetag
		SECID		{ $trans{"security"} = $main::semap{$_[10]} }
		SUBACCTSEC
		UNITS		{ $trans{"qty"} = $_[13] }
		TFERACTION	{ $trans{"type"} .= mapSType($_[15]) }
		POSTYPE
                UNITPRICEOPT
		TRANSFERetag	{ printTrans() }
	;

UNITPRICEOPT:   #empty
        |       UNITPRICE	{ $trans{"price"} = $_[1] }
	;

INCOME:		INCOMEstag	{ %trans = initTrans() }
		INVTRANstag
		FITID
		DTTRADE		{ $trans{"date"} = formatDate($_[5]) }
		DTSETTLE
		MEMOOPT
		INVTRANetag
		SECID		{ $trans{"security"} = $main::semap{$_[10]} }
		INCOMETYPE	{ $trans{"type"} = mapIType($_[12]) }
		TOTAL		{ $trans{"totalamt"} = $_[14]; $trans{"invstamt"} = $_[14] }
		SUBACCTSEC
		INCOMEetag	{ printTrans() }
	;

MEMOOPT:	#empty
    	|	MEMO		{ $trans{"memo"} = $_[1] }
    	;

BANKTRAN:	INVBANKTRANstag	{ %trans = initTrans() }
		STMTTRNstag
		TRNTYPE		{ $trans{"type"} = mapTType($_[4]) }
		DTPOSTED	{ $trans{"date"} = formatDate($_[6]) }
		TRNAMT		{ $trans{"trnamt"} = $_[8] }
		FITID
		STMTTRNetag
		SUBACCTSEC
		INVBANKTRANetag	{ printTrans() }
	;

%%

sub initTrans {
    return({date => "",
	    type => "",
	    security => "",
	    price => "",
	    qty => "",
	    commission => "",
	    fees => "",
	    invstamt => "",
	    totalamt => "",
	    trnamt => "",
	    memo => ""
	   });
}

sub mapTType {
    local $_=shift;
    my $type;

  SWITCH: {
      if (/^OTHER/) { $type="XIn"; last SWITCH; }
      $type="";
    }
    return($type);
}

sub mapIType {
    local $_=shift;
    my $type;

  SWITCH: {
      if (/^DIV/) { $type="Div"; last SWITCH; }
      $type="";
    }
    return($type);
}

sub mapSType {
    local $_=shift;
    my $type;

  SWITCH: {
      if (/^IN/)  { $type="In"; last SWITCH; }
      if (/^OUT/) { $type="Out"; last SWITCH; }
      $type="";
    }
    return($type);
}

sub printTrans {
    return unless $acct =~ /$main::acctregexp/;

    if ($trans{'memo'} =~ /^DIVIDEND REINVESTMENTDIVIDEND REINVESTMENT/) { $trans{'memo'}=""; }

  SWITCH: {
      if ($trans{'type'} =~ /^XIn/) {

	  last SWITCH;					# don't export

	  print main::QIF "D$trans{'date'}\n";
	  print main::QIF "N$trans{'type'}\n";
	  print main::QIF "U$trans{'trnamt'}\n";
	  print main::QIF "T$trans{'trnamt'}\n";
	  print main::QIF "L\n";			# account
	  print main::QIF "M$trans{'memo'}\n";
	  print main::QIF "^\n";

	  last SWITCH;
      }
      if ($trans{'type'} =~ /^Div/) {

	  print main::QIF "D$trans{'date'}\n";
	  print main::QIF "N$trans{'type'}\n";
	  print main::QIF "Y$trans{'security'}\n";
	  print main::QIF "U$trans{'invstamt'}\n";
	  print main::QIF "T$trans{'totalamt'}\n";
	 #print main::QIF "M$trans{'memo'}\n";
	  print main::QIF "^\n";

	  last SWITCH;
      }
      if ($trans{'type'} =~ /^ShrsOut/) {

	  print main::QIF "D$trans{'date'}\n";
	  print main::QIF "N$trans{'type'}\n";
	  print main::QIF "Y$trans{'security'}\n";
          print main::QIF "I$trans{'price'}\n";
          print main::QIF "Q$trans{'qty'}\n";
	  print main::QIF "M$trans{'memo'}\n";
	  print main::QIF "^\n";

	  last SWITCH;
      }
      if ($trans{'type'} =~ /^ShrsIn/) {

	  print main::QIF "D$trans{'date'}\n";
	  print main::QIF "N$trans{'type'}\n";
	  print main::QIF "Y$trans{'security'}\n";
          print main::QIF "Q$trans{'qty'}\n";
	  print main::QIF "M$trans{'memo'}\n";
	  print main::QIF "^\n";

	  last SWITCH;
      }
      if ($trans{'type'} =~ /^Sell/) {

      	  my $fees = $trans{'commission'}+$trans{'fees'};

          print main::QIF "D$trans{'date'}\n";
	  print main::QIF "N$trans{'type'}\n";
          print main::QIF "Y$trans{'security'}\n";
          print main::QIF "I$trans{'price'}\n";
          print main::QIF "Q$trans{'qty'}\n";
          print main::QIF "O$fees\n";
          print main::QIF "U$trans{'invstamt'}\n";
          print main::QIF "T$trans{'totalamt'}\n";
          print main::QIF "M$trans{'memo'}\n";
          print main::QIF "^\n";

	  last SWITCH;
      }

      # otherwise #

      print main::QIF "D$trans{'date'}\n";
      print main::QIF "N$trans{'type'}\n";
      print main::QIF "Y$trans{'security'}\n";
      print main::QIF "I$trans{'price'}\n";
      print main::QIF "Q$trans{'qty'}\n";
      print main::QIF "U$trans{'invstamt'}\n";
      print main::QIF "T$trans{'totalamt'}\n";
      print main::QIF "M$trans{'memo'}\n";
      print main::QIF "^\n";
    }
}

sub formatDate {
    local $_=shift;
    my ($yyyy, $mm, $dd) = /^(20\d\d)(\d\d)(\d\d).*$/;
    return("$mm/$dd/$yyyy");
}
